[project]
name = "graphaura-backend"
version = "0.1.0"
description = "graphaura - multi-modal knowledge graph backend"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[all]>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "python-multipart>=0.0.12",
    "neo4j>=5.25.0",
    "asyncpg>=0.30.0",
    "pgvector>=0.3.6",
    "pydantic-settings>=2.6.0",
    "python-jose[cryptography]>=3.3.0",
    "httpx>=0.27.0",
    "redis>=5.2.0",
    "r2r>=3.5.0",
    "numpy>=2.0.0",
    "scikit-learn>=1.5.0",
    "tenacity>=9.0.0",
    "structlog>=24.4.0",
    "python-dotenv>=1.0.1",
    "celery>=5.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.10.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "ipython>=8.29.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501", "B008", "C901", "W191"]

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
